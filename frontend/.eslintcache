[{"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js":"1","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayArtist.js":"2","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/Home.jsx":"3","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js":"4","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayPlayList.js":"5","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayAlbum.js":"6","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js":"7","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayTracks.js":"8","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignIn.js":"9","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayMusic.js":"10"},{"size":3858,"mtime":1608142715673,"results":"11","hashOfConfig":"12"},{"size":12181,"mtime":1608142991578,"results":"13","hashOfConfig":"12"},{"size":2036,"mtime":1608071380165,"results":"14","hashOfConfig":"12"},{"size":3834,"mtime":1607982813639,"results":"15","hashOfConfig":"12"},{"size":7677,"mtime":1608143268854,"results":"16","hashOfConfig":"12"},{"size":6684,"mtime":1608143290333,"results":"17","hashOfConfig":"12"},{"size":171,"mtime":1607791892164,"results":"18","hashOfConfig":"12"},{"size":7587,"mtime":1608143130963,"results":"19","hashOfConfig":"12"},{"size":3430,"mtime":1608142715660,"results":"20","hashOfConfig":"12"},{"size":8402,"mtime":1608143609043,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hswteu",{"filePath":"24","messages":"25","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js",["44"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayArtist.js",["45","46","47","48","49","50","51","52","53"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/Home.jsx",["54"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayPlayList.js",["55","56","57","58"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\n\nimport { AuthContext } from '../firebase/Auth'\nimport Loading from './Loading'\nimport AddPostModal from './Modals/AddPostModal'\nimport ShowErrorModal from './Modals/ShowErrorModal'\nimport axios from 'axios'\nimport { SpotifyContext } from '../functions/Spotify'\n\nconst useStyles = makeStyles({\n    sidebarCard: {\n        maxWidth: '100%',\n        height: '100%',\n        marginTop: '12px',\n    },\n    card: {\n        marginTop: '10%',\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        marginTop: '2%',\n        flexGrow: 1,\n        flexDirection: 'row',\n        textAlign: 'center',\n    },\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        justifyContent: 'center',\n        marginBottom: '5%',\n        marginTop: '5%',\n    },\n    h3class: {\n        display: 'block',\n        fontSize: '1.17em',\n        marginTop: '1em',\n        marginBottom: '1em',\n        marginLeft: '0',\n        marginRight: '0',\n        fontWeight: 'bold',\n    },\n})\n\nconst PlayByPlayList = (props) => {\n    const { accessToken } = useContext(SpotifyContext)\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [albumId, setAlbumId] = useState(props.match.params.id)\n    const [errorModal, setErrorModal] = useState(false)\n\n    let card = null\n    const baseUrl = 'http://localhost:3000/spotify-api/playlists/'\n\n    const { currentUser } = useContext(AuthContext)\n\n    useEffect(() => {\n        console.log('on load useeffect')\n        async function fetchData() {\n            try {\n                console.log(albumId)\n                const { data } = await axios.get(\n                    baseUrl +\n                        props.match.params.id +\n                        '?access_token=' +\n                        accessToken\n                )\n                setPlayListData(data)\n                console.log(data)\n                setLoading(false)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        fetchData()\n    }, [props.match.params.id])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        setErrorModal(true)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const buildCard = (album) => {\n        return (\n            <div class=\"main\">\n                <Grid\n                    className={classes.grid}\n                    spacing={5}\n                    item\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={12}\n                    xl={12}\n                    key={album.id}\n                >\n\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography\n                                    className={classes.titleHead}\n                                    gutterBottom\n                                    variant=\"h6\"\n                                    component={classes.h3class}\n                                >\n                                    <span>{album.name}</span>\n                                    <br />\n                                    <span>\n                                        Track Number: {album.track_number}\n                                    </span>\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <iframe\n                            id=\"playSong\"\n                            src={\n                                'https://open.spotify.com/embed?uri=' +\n                                album.uri\n                            }\n                            width=\"300\"\n                            height=\"380\"\n                            frameBorder=\"0\"\n                            allowtransparency=\"true\"\n                            allow=\"encrypted-media\"\n                        ></iframe>\n                        <div className=\"e-card-actions e-card-vertical\">\n                            <center>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.buttonClass}\n                                    onClick={() => {\n                                        handleOpenshareModal(album)\n                                    }}\n                                >\n                                    share\n                                </Button>\n                            </center>\n                            {currentUser\n                                ? showSharePostModal && (\n                                      <AddPostModal\n                                          isOpen={showSharePostModal}\n                                          handleClose={handleCloseModals}\n                                          title={'Share Post'}\n                                          data={null}\n                                          currentUser={currentUser.uid}\n                                          songData={sharePost}\n                                          postId={null}\n                                      />\n                                  )\n                                : errorModal && (\n                                      <ShowErrorModal\n                                          isOpen={errorModal}\n                                          handleClose={handleCloseModals}\n                                          title={'Login Error'}\n                                      />\n                                  )}\n                        </div>\n                    </Card>\n                </Grid>\n            </div>\n        )\n    }\n    if (playListData) {\n        console.log(playListData)\n        card = playListData && playListData\n        return buildCard(playListData)\n    }\n\n    if (loading) {\n        return <Loading />\n    }\n    if (hasError) {\n        return <div>{hasError}</div>\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayByPlayList\n","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayAlbum.js",["59","60","61","62","63","64"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayTracks.js",["65","66","67","68","69","70"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignIn.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayMusic.js",["71","72","73","74"],"import React, { useState, useEffect, useContext } from 'react'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\nimport { useWindowDimensions } from '../functions/dimensions'\nimport { Link } from 'react-router-dom'\nimport { SpotifyContext } from '../functions/Spotify'\nimport Nav from 'react-bootstrap/Nav'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\nimport ShowErrorModal from './Modals/ShowErrorModal'\n\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\n\nconst types = ['album', 'artist', 'playlist', 'track']\n\nconst useStyles = makeStyles({\n    card: {\n        marginBottom: '5%',\n        width: '100%',\n        height: '100%',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n})\n\nconst UsePlayMusic = () => {\n    const { accessToken } = useContext(SpotifyContext)\n    const classes = useStyles()\n    const [search, setSearch] = useState('')\n    const [results, setResults] = useState([])\n    const { width } = useWindowDimensions()\n    const [hasError, setHasError] = useState(null)\n    const [searchType, setSearchType] = useState(null)\n\n    const baseUrl = `http://${window.location.hostname}:3000/spotify-api/search?q=`\n\n    useEffect(() => {\n        const value = search === '' ? 'A' : search\n        console.log(`searchtype = ${searchType}`)\n\n        const url =\n            baseUrl +\n            value\n                .toLowerCase()\n                .split(' ')\n                .filter((word) => !types.includes(word))\n                .join(' ') +\n            '&type=track,album,playlist,artist&market=US&access_token=' +\n            accessToken\n\n        axios\n            .get(url)\n            .then(({ data }) => {\n                console.log(data)\n                if (searchType === 'album') {\n                    setResults(data.albums.items)\n                } else if (searchType === 'artist') {\n                    setResults(data.artists.items)\n                } else if (searchType === 'playlist') {\n                    setResults(data.playlists.items)\n                } else if (searchType === 'track') {\n                    setResults(data.tracks.items)\n                } else {\n                    let res = data.playlists.items || []\n                    res = res.concat(data.artists.items || [])\n                    res = res.concat(data.albums.items || [])\n                    res = res.concat(data.tracks.items || [])\n                    setResults(res)\n                    setSearchType('all')\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n                setHasError(err)\n            })\n    }, [search, searchType])\n\n    return {\n        search,\n        setSearch,\n        results,\n        width,\n        searchType,\n        setSearchType,\n        classes,\n    }\n}\n\nconst PlayMusic = () => {\n    const {\n        search,\n        setSearch,\n        results,\n        setSearchType,\n        classes,\n    } = UsePlayMusic()\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [errorModal, setErrorModal] = useState(false)\n    const { currentUser } = useContext(AuthContext)\n\n    const handleSelect = (eventKey) => {\n        setSearchType(eventKey)\n    }\n\n    const handleOpenshareModal = (album) => {\n        console.log(album)\n        setShowSharePostModal(true)\n        setSharePost(album)\n        setErrorModal(true)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const buildCard = (album) => {\n        return (\n            <Card className={classes.card} variant=\"outlined\">\n                <CardActionArea>\n                    <CardContent>\n                        <Grid container justify=\"space-between\">\n                            <Typography\n                                inline\n                                variant=\"body1\"\n                                align=\"left\"\n                                class={classes.titleHead}\n                            >\n                                <span>{album.name}</span>\n                                <br />\n                                <span>Track Number: {album.track_number}</span>\n                            </Typography>\n                            <Typography inline variant=\"body1\" align=\"right\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => {\n                                        handleOpenshareModal(album)\n                                    }}\n                                >\n                                    share\n                                </Button>\n                            </Typography>\n                        </Grid>\n                    </CardContent>\n                </CardActionArea>\n                <iframe\n                    id=\"playSong\"\n                    src={'https://open.spotify.com/embed?uri=' + album.uri}\n                    width=\"100%\"\n                    height=\"500\"\n                    frameBorder=\"0\"\n                    allowtransparency=\"true\"\n                    allow=\"encrypted-media\"\n                ></iframe>\n                {currentUser\n                    ? showSharePostModal && (\n                          <AddPostModal\n                              isOpen={showSharePostModal}\n                              handleClose={handleCloseModals}\n                              title={'Share Post'}\n                              data={null}\n                              currentUser={currentUser.uid}\n                              songData={sharePost}\n                              postId={null}\n                          />\n                      )\n                    : errorModal && (\n                          <ShowErrorModal\n                              isOpen={errorModal}\n                              handleClose={handleCloseModals}\n                              title={'Login Error'}\n                          />\n                      )}\n            </Card>\n        )\n    }\n\n    return (\n        <div class=\"main\">\n            <Nav variant=\"light\" onSelect={handleSelect}>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"album\" href=\"#album\">\n                        Album{' '}\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"artist\" href=\"#artist\">\n                        Artist{' '}\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"track\" href=\"#track\">\n                        Track{' '}\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"playlist\" href=\"#playlist\">\n                        {' '}\n                        Playlist{' '}\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n\n            <div className=\"search\" style={{ width: '90%' }}>\n                <Icon icon={faSearch} color=\"#444\" />\n                <input\n                    className=\"search-input\"\n                    placeholder=\"Search\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n            </div>\n\n            <br />\n\n            {results && results.length > 0 ? (\n                <div class=\"main\">\n                    {results.map((song) => (\n                        <Grid container className={classes.grid} spacing={5}>\n                            {buildCard(song)}\n                        </Grid>\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <p> Currently no songs available </p>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default PlayMusic\n",{"ruleId":"75","severity":1,"message":"76","line":23,"column":7,"nodeType":"77","messageId":"78","endLine":23,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":10,"column":5,"nodeType":"77","messageId":"78","endLine":10,"endColumn":9},{"ruleId":"75","severity":1,"message":"80","line":11,"column":5,"nodeType":"77","messageId":"78","endLine":11,"endColumn":14},{"ruleId":"75","severity":1,"message":"81","line":94,"column":22,"nodeType":"77","messageId":"78","endLine":94,"endColumn":33},{"ruleId":"75","severity":1,"message":"82","line":110,"column":9,"nodeType":"77","messageId":"78","endLine":110,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":128,"column":8,"nodeType":"85","endLine":128,"endColumn":31,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":151,"column":8,"nodeType":"85","endLine":151,"endColumn":21,"suggestions":"88"},{"ruleId":"75","severity":1,"message":"89","line":168,"column":11,"nodeType":"77","messageId":"78","endLine":168,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":203,"column":25,"nodeType":"92","endLine":214,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":279,"column":21,"nodeType":"92","endLine":287,"endColumn":22},{"ruleId":"75","severity":1,"message":"93","line":12,"column":12,"nodeType":"77","messageId":"78","endLine":12,"endColumn":30},{"ruleId":"75","severity":1,"message":"81","line":91,"column":22,"nodeType":"77","messageId":"78","endLine":91,"endColumn":33},{"ruleId":"75","severity":1,"message":"94","line":95,"column":21,"nodeType":"77","messageId":"78","endLine":95,"endColumn":31},{"ruleId":"83","severity":1,"message":"95","line":122,"column":8,"nodeType":"85","endLine":122,"endColumn":31,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"91","line":167,"column":25,"nodeType":"92","endLine":178,"endColumn":26},{"ruleId":"75","severity":1,"message":"81","line":86,"column":22,"nodeType":"77","messageId":"78","endLine":86,"endColumn":33},{"ruleId":"75","severity":1,"message":"94","line":90,"column":21,"nodeType":"77","messageId":"78","endLine":90,"endColumn":31},{"ruleId":"75","severity":1,"message":"97","line":98,"column":12,"nodeType":"77","messageId":"78","endLine":98,"endColumn":17},{"ruleId":"75","severity":1,"message":"98","line":98,"column":19,"nodeType":"77","messageId":"78","endLine":98,"endColumn":27},{"ruleId":"83","severity":1,"message":"95","line":119,"column":8,"nodeType":"85","endLine":119,"endColumn":31,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"91","line":150,"column":21,"nodeType":"92","endLine":158,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":92,"column":22,"nodeType":"77","messageId":"78","endLine":92,"endColumn":33},{"ruleId":"75","severity":1,"message":"94","line":96,"column":21,"nodeType":"77","messageId":"78","endLine":96,"endColumn":31},{"ruleId":"75","severity":1,"message":"97","line":104,"column":12,"nodeType":"77","messageId":"78","endLine":104,"endColumn":17},{"ruleId":"75","severity":1,"message":"98","line":104,"column":19,"nodeType":"77","messageId":"78","endLine":104,"endColumn":27},{"ruleId":"83","severity":1,"message":"95","line":125,"column":8,"nodeType":"85","endLine":125,"endColumn":31,"suggestions":"100"},{"ruleId":"90","severity":1,"message":"91","line":169,"column":25,"nodeType":"92","endLine":180,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":14},{"ruleId":"75","severity":1,"message":"101","line":51,"column":12,"nodeType":"77","messageId":"78","endLine":51,"endColumn":20},{"ruleId":"83","severity":1,"message":"102","line":95,"column":8,"nodeType":"85","endLine":95,"endColumn":28,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"91","line":167,"column":17,"nodeType":"92","endLine":175,"endColumn":18},"no-unused-vars","'PlayListByLoveSongs' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'CardMedia' is defined but never used.","'setHasError' is assigned a value but never used.","'artist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'artistId'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has missing dependencies: 'accessToken' and 'props.match.params.id'. Either include them or remove the dependency array. If 'setAristId' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["105"],"'backtoArtist' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'spotifyAccessToken' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'albumId'. Either include them or remove the dependency array.",["106"],"'state' is assigned a value but never used.","'setState' is assigned a value but never used.",["107"],["108"],"'hasError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'baseUrl'. Either include them or remove the dependency array.",["109"],{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"114","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [accessToken, artistId, props.match.params.id]",{"range":"120","text":"121"},"Update the dependencies array to be: [accessToken, artistAlbum, props.match.params.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [accessToken, albumId, props.match.params.id]",{"range":"124","text":"125"},{"range":"126","text":"125"},{"range":"127","text":"125"},"Update the dependencies array to be: [accessToken, baseUrl, search, searchType]",{"range":"128","text":"129"},[3433,3456],"[accessToken, artistId, props.match.params.id]",[4182,4195],"[accessToken, artistAlbum, props.match.params.id]",[3274,3297],"[accessToken, albumId, props.match.params.id]",[3201,3224],[3317,3340],[3089,3109],"[accessToken, baseUrl, search, searchType]"]