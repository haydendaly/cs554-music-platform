[{"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js":"1","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js":"2","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx":"3","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx":"4","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js":"5","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js":"6","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js":"7","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js":"8","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx":"9","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx":"10","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js":"11","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Modals\\ShowErrorModal.js":"12","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js":"13","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchComponent.js":"14","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js":"15","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\firebase\\Auth.js":"16","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Navigation.js":"17"},{"size":3456,"mtime":1607711967674,"results":"18","hashOfConfig":"19"},{"size":25321,"mtime":1607712159457,"results":"20","hashOfConfig":"19"},{"size":3081,"mtime":1607718081172,"results":"21","hashOfConfig":"19"},{"size":3386,"mtime":1607664945577,"results":"22","hashOfConfig":"19"},{"size":12061,"mtime":1607726757695,"results":"23","hashOfConfig":"19"},{"size":171,"mtime":1607664945796,"results":"24","hashOfConfig":"19"},{"size":3487,"mtime":1607664944979,"results":"25","hashOfConfig":"19"},{"size":7823,"mtime":1607725847764,"results":"26","hashOfConfig":"19"},{"size":607,"mtime":1607664945177,"results":"27","hashOfConfig":"19"},{"size":181,"mtime":1607664945810,"results":"28","hashOfConfig":"19"},{"size":6204,"mtime":1607664945337,"results":"29","hashOfConfig":"19"},{"size":2523,"mtime":1607664945141,"results":"30","hashOfConfig":"19"},{"size":3591,"mtime":1607664945662,"results":"31","hashOfConfig":"19"},{"size":840,"mtime":1607712270552,"results":"32","hashOfConfig":"19"},{"size":2724,"mtime":1607664945612,"results":"33","hashOfConfig":"19"},{"size":671,"mtime":1607664945706,"results":"34","hashOfConfig":"19"},{"size":1260,"mtime":1607664945212,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1ta8lqd",{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js",["77"],"import React, { lazy, Suspense } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { AuthProvider } from '../firebase/Auth'\r\n// import { PlayAlbum } from \"../components\";\r\nimport NavBar from '../components/NavBar'\r\nimport Sidebar from '../components/Sidebar'\r\nimport SidebarRight from '../components/SidebarRight'\r\nimport { NoSchemaIntrospectionCustomRule } from 'graphql'\r\n\r\nconst SignIn = lazy(() => import('../components/SignIn'))\r\nconst SignUp = lazy(() => import('../components/SignUp'))\r\nconst PlayAlbum = lazy(() => import('../components/playAlbum'))\r\nconst PlayArtist = lazy(() => import('../components/Artist'))\r\nconst PlayListByLoveSongs = lazy(() =>\r\n    import('../components/playListbyLoveSongs')\r\n)\r\nconst SearchPlayList = lazy(() => import('../components/SearchPlayList'))\r\nconst PostInsert = lazy(() => import('../pages/PostInsert'))\r\nconst Home = lazy(() => import('../pages/Home'))\r\nconst UserProfile = lazy(() => import('../pages/UserProfile'))\r\nconst ChangePassword = lazy(() => import('../components/ChangePassword'))\r\n\r\nfunction App() {\r\n    return (\r\n        <AuthProvider>\r\n            <Router>\r\n                <NavBar />\r\n                <Sidebar />\r\n                <SidebarRight />\r\n                <Suspense fallback={<p>Loading...</p>}>\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/post/create\"\r\n                            exact\r\n                            component={PostInsert}\r\n                        />\r\n                        <Route path=\"/post\" exact component={Home} />\r\n                        <Route path=\"/signin\" component={SignIn} />\r\n                        <Route path=\"/signup\" component={SignUp} />\r\n                        <Route path=\"/playList\" exact component={PlayAlbum} />\r\n                        <Route\r\n                            path=\"/searchTracks\"\r\n                            exact\r\n                            component={SearchPlayList}\r\n                        />\r\n                        <Route\r\n                            path=\"/artistPlayList\"\r\n                            exact\r\n                            component={PlayArtist}\r\n                        />\r\n                        <Route\r\n                            path=\"/playListbyLove\"\r\n                            exact\r\n                            component={PlayListByLoveSongs}\r\n                        />\r\n\r\n                        <Route\r\n                            path=\"/usershowprofile\"\r\n                            exact\r\n                            component={() => <UserProfile page=\"ShowProfile\" />}\r\n                        />\r\n                        <Route\r\n                            path=\"/usereditprofile\"\r\n                            exact\r\n                            component={() => <UserProfile page=\"EditProfile\" />}\r\n                        />\r\n                        <Route\r\n                            path=\"/userupdatepassword\"\r\n                            exact\r\n                            component={ChangePassword}\r\n                        />\r\n                        <Route path=\"/\">\r\n                            <Redirect to=\"/post\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </Suspense>\r\n            </Router>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n",["78","79"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js",["80","81","82","83","84","85"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n    CardMedia,\r\n    Link\r\n} from '@material-ui/core'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport { AuthContext } from '../firebase/Auth'\r\nimport AddPostModal from './Modals/AddPostModal'\r\nimport SearchComponent from './SearchComponent'\r\nimport ShowErrorModal from './Modals/ShowErrorModal'\r\nimport deadmau5_Image from '../img/artist-img/deadmau5.jpg'\r\nimport Keane_Image from '../img/artist-img/Keane.jpg'\r\nimport Avici_Image from '../img/artist-img/Avici.jpg'\r\nimport Elvis_Image from '../img/artist-img/Elvis.jpg'\r\nimport VariousArtist_Image from '../img/artist-img/various_artist.jpg'\r\nimport IZAL from '../img/artist-img/IZAL.jpg'\r\nimport VetustaMorla from '../img/artist-img/VetustaMorla.jpg'\r\n\r\nlet Spotify = require('spotify-web-api-js')\r\n\r\nlet spotifyApi = new SpotifyWebApi()\r\n\r\nspotifyApi.setAccessToken(\r\n    'BQAg9L_c09vM1ThhLGRZt-FBwcS8-vx3JyNEFB7rQ3CQnLh2WPOUk9qkksbLzsvtlig7QGOFYpCuCHLBpqZZWIXtIAjgb33v3M55De3XoIg5jnDDKfLIMORo9sBFvt5rWMw7AhWaN3GWNgGpB5Tu7DTgl8efHYtYIK1oUGxks5GwYPLq'\r\n)\r\n\r\nconst useStyles = makeStyles({\r\n    sidebar: {\r\n        marginTop: '10%',\r\n        backgroundColor: 'grey',\r\n        maxWidth: '20%',\r\n    },\r\n    mainbar: {\r\n        marginTop: '1%',\r\n    },\r\n    sidebarCard: {\r\n        maxWidth: '150px !important',\r\n        height: '150px',\r\n        textAlign: 'center',\r\n        borderRadius: 1,\r\n        border: '1px solid #1e8678',\r\n        marginBottom: '10px',\r\n        marginTop: '10px',\r\n        boxShadow:\r\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\r\n        backgroundColor: 'lightblue',\r\n    },\r\n    card: {\r\n        maxWidth: '100%',\r\n        height: '100%',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow:\r\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\r\n        padding: '5px',\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold',\r\n        Color: 'black !important',\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    buttonClass: {\r\n        marginLeft: '40%',\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        maxWidth: '100%',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '50%',\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        width: '50%',\r\n    },\r\n    errorDiv: {\r\n        color: 'red',\r\n    },\r\n})\r\n\r\nconst PlayTracks = (props) => {\r\n    const [artistData, setArtistData] = useState(null)\r\n    const [artistId, setArtistId] = useState('43ZHCT0cAZBISjO8DG9PnE')\r\n    const classes = useStyles()\r\n    const [hasError, setHasError] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [sharePost, setSharePost] = useState(null)\r\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\r\n    const [searchTerm, setSearchTerm] = useState(null)\r\n    const [searchData, setSearchData] = useState(null)\r\n    const [errorModal, setErrorModal] = useState(false)\r\n    const [albumid, setAlbumId] = useState(null)\r\n\r\n    const { currentUser } = useContext(AuthContext)\r\n\r\n    let card = null\r\n    //1pzvBxYgT6OVwJLtHkrdQK -- Taylor Swift\r\n    //2hDe0Ls5mVqs1XJqv7sbcM -- Enrique\r\n    //4MzXwWMhyBbmu6hOcLVD49 -- bad Bunny\r\n    //43ZHCT0cAZBISjO8DG9PnE -- Elvis\r\n    //53A0W3U0s8diEn9RhXQhVz --Keane\r\n    // 2CIMQHirSU0MQqyYHq0eOx -- \"deadmau5\"\r\n    //57dN52uHvrHOxijzpIgu3E -- Various Artists\r\n    //1vCWHaC5f2uS3yhpwWbIA6 -- \"Avicii\"\r\n    //https://open.spotify.com/album/5Ouuxga807CPAs81lSloBJ?si=u9qkqNpiR2m45FkvcG4rnQ\r\n    //\"2hazSY4Ef3aB9ATXW7F5w3\" -- IZAL\r\n    //\"6J6yx1t3nwIDyPXk5xa7O8\" -- \"6J6yx1t3nwIDyPXk5xa7O8\"\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                spotifyApi.getArtistAlbums(\r\n                    artistId,\r\n                    { country: 'us' },\r\n                    function (err, data) {\r\n                        if (err) {\r\n                            console.error('Something went wrong!')\r\n                        } else {\r\n                            setArtistData(data.items)\r\n                            setSearchData(null)\r\n                            setLoading(false)\r\n                        }\r\n                    }\r\n                )\r\n            } catch (e) {\r\n                setHasError(e.message)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [artistId])\r\n\r\n    useEffect(() => {\r\n        async function searchArtist() {\r\n            try {\r\n                console.log(searchTerm)\r\n                spotifyApi.searchArtists(searchTerm).then(\r\n                    function (data) {\r\n                        setSearchData({ data: data.artists.items })\r\n                        setLoading(false)\r\n                    },\r\n                    function (err) {\r\n                        setHasError(err)\r\n                        setLoading(false)\r\n                    }\r\n                )\r\n            } catch (e) {\r\n                setHasError(e.message)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        searchArtist()\r\n    }, [searchTerm])\r\n\r\n    const handleOpenshareModal = (trackDetails) => {\r\n        setShowSharePostModal(true)\r\n        setSharePost(trackDetails)\r\n        setErrorModal(true)\r\n    }\r\n\r\n    const handleCloseModals = () => {\r\n        setShowSharePostModal(false)\r\n        setErrorModal(false)\r\n    }\r\n\r\n    const getAtristID = (id) => {\r\n        console.log(id)\r\n        setArtistId(id)\r\n    }\r\n    const searchValue = async (value) => {\r\n        setSearchTerm(value)\r\n    }\r\n    const buildCard = (artist) => {\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={4} key={artist.id}>\r\n                <Card className={classes.card} variant=\"outlined\">\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography\r\n                                className={classes.titleHead}\r\n                                gutterBottom\r\n                                variant=\"h6\"\r\n                                component=\"h3\"\r\n                            >\r\n                                <span>{artist.name}</span>\r\n                                <br />\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <iframe\r\n                        id=\"playSong\"\r\n                        src={'https://open.spotify.com/embed?uri=' + artist.uri}\r\n                        width=\"300\"\r\n                        height=\"380\"\r\n                        frameborder=\"0\"\r\n                        allowtransparency=\"true\"\r\n                        allow=\"encrypted-media\"\r\n                    ></iframe>\r\n                    <div className=\"e-card-actions e-card-vertical\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.buttonClass}\r\n                            onClick={() => {\r\n                                handleOpenshareModal(artist)\r\n                            }}\r\n                        >\r\n                            share\r\n                        </Button>\r\n                    </div>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n    if (searchTerm && searchData) {\r\n        card =\r\n            searchData.data &&\r\n            searchData.data.map((searhedList) => {\r\n                return buildCard(searhedList)\r\n            })\r\n    } else {\r\n        card =\r\n            artistData &&\r\n            artistData.map((artist) => {\r\n                return buildCard(artist)\r\n            })\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        )\r\n    } else if (searchTerm && searchData.data.length <= 0) {\r\n        return (\r\n            <div class=\"main\">\r\n                <div class=\"row\">\r\n                    <div\r\n                        class=\"col-md-3 col-sm-6 col-xs-12\"\r\n                        className={classes.sidebar}\r\n                    >\r\n                        <div className={classes.sidebarCard}>\r\n                            <h4>Artist List</h4>\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '2CIMQHirSU0MQqyYHq0eOx'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={deadmau5_Image}\r\n                                            title=\"show image\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '53A0W3U0s8diEn9RhXQhVz'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Keane_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '1vCWHaC5f2uS3yhpwWbIA6'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Avici_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '43ZHCT0cAZBISjO8DG9PnE'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Elvis_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '2hazSY4Ef3aB9ATXW7F5w3'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={IZAL}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '6J6yx1t3nwIDyPXk5xa7O8'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={VetustaMorla}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '57dN52uHvrHOxijzpIgu3E'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={VariousArtist_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\"col-md-9\">\r\n                        <div>\r\n                            <SearchComponent\r\n                                searchValue={searchValue}\r\n                                searchTerm={searchTerm}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <div className={classes.errorDiv}>\r\n                            \"error: No result found for this search.\"\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div class=\"main\">\r\n                <div class=\"row\">\r\n                    <div\r\n                        class=\"col-md-3 col-sm-6 col-xs-12\"\r\n                        className={classes.sidebar}\r\n                    >\r\n                        <div className={classes.sidebarCard}>\r\n                            <h4>Artist List</h4>\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '2CIMQHirSU0MQqyYHq0eOx'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={deadmau5_Image}\r\n                                            title=\"show image\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '53A0W3U0s8diEn9RhXQhVz'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Keane_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '1vCWHaC5f2uS3yhpwWbIA6'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Avici_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '43ZHCT0cAZBISjO8DG9PnE'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={Elvis_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '2hazSY4Ef3aB9ATXW7F5w3'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={IZAL}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '6J6yx1t3nwIDyPXk5xa7O8'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={VetustaMorla}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                            <Card variant=\"outlined\">\r\n                                <CardActionArea>\r\n                                    <Link\r\n                                        onClick={() =>\r\n                                            getAtristID(\r\n                                                '57dN52uHvrHOxijzpIgu3E'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            component=\"img\"\r\n                                            image={VariousArtist_Image}\r\n                                            title=\"Paella dish\"\r\n                                        />\r\n                                    </Link>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\"col-md-9\">\r\n                        <div>\r\n                            <SearchComponent\r\n                                searchValue={searchValue}\r\n                                searchTerm={searchTerm}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Grid\r\n                                container\r\n                                className={classes.grid}\r\n                                className={classes.mainbar}\r\n                                spacing={5}\r\n                            >\r\n                                {card}\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {currentUser\r\n                    ? showSharePostModal && (\r\n                          <AddPostModal\r\n                              isOpen={showSharePostModal}\r\n                              handleClose={handleCloseModals}\r\n                              title={'Share Post'}\r\n                              data={null}\r\n                              currentUser={currentUser.uid}\r\n                              songData={sharePost}\r\n                              postId={null}\r\n                          />\r\n                      )\r\n                    : errorModal && (\r\n                          <ShowErrorModal\r\n                              isOpen={errorModal}\r\n                              handleClose={handleCloseModals}\r\n                              title={'Login Error'}\r\n                          />\r\n                      )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayTracks\r\n","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx",[],["86","87"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js",["88","89","90"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js",[],["91","92"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js",["93","94","95"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js",["96","97","98"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\n\nlet Spotify = require('spotify-web-api-js')\n// var s = new Spotify();\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQBclgNt0TcT10snXjsw5KbLGIxzuCjtTyLeU9mX-knZrueTkSrKnq1JJ-G_ncLoJUyhBIKfqn_YB2mwy5mWSHbxaTj3-BqgPPG-tRGDauzL-OkAkfJMyhsBaNi3Rj6FLPx2P5ESnf_S_eW6rOO7ZqVU4Ct8NQ35dnMJVHfOw9Rrm-P5'\n)\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n})\n\nconst PlayListByLoveSongs = (props) => {\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.searchTracks('Love', { country: 'us' }).then(\n                    function (data) {\n                        setPlayListData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        console.log(trackDetails)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n    }\n\n    const buildCard = (playList) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <a href={playList.external_urls.spotify}>\n                            Go to Spotify\n                        </a>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{playList.name}</span>\n                                <br />\n                                <span>Popularity: {playList.popularity}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={\n                            'https://open.spotify.com/embed?uri=' + playList.uri\n                        }\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(playList)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                    {showSharePostModal && (\n                        <AddPostModal\n                            isOpen={showSharePostModal}\n                            handleClose={handleCloseModals}\n                            title={'Share Post'}\n                            data={null}\n                            currentUser={currentUser.uid}\n                            songData={sharePost}\n                            postId={null}\n                        />\n                    )}\n                </Card>\n            </Grid>\n        )\n    }\n    if (playListData) {\n        console.log(playListData)\n        card =\n            playListData &&\n            playListData\n                .filter((x) =>\n                    x.available_markets.some((y) => y.includes('US'))\n                )\n                .map((playList) => {\n                    return buildCard(playList)\n                })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayListByLoveSongs\n",["99","100"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Modals\\ShowErrorModal.js",["101","102","103"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchComponent.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\firebase\\Auth.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Navigation.js",[],{"ruleId":"104","severity":1,"message":"105","line":15,"column":10,"nodeType":"106","messageId":"107","endLine":15,"endColumn":41},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"112","line":26,"column":5,"nodeType":"106","messageId":"107","endLine":26,"endColumn":12},{"ruleId":"104","severity":1,"message":"113","line":105,"column":12,"nodeType":"106","messageId":"107","endLine":105,"endColumn":20},{"ruleId":"104","severity":1,"message":"114","line":112,"column":12,"nodeType":"106","messageId":"107","endLine":112,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":112,"column":21,"nodeType":"106","messageId":"107","endLine":112,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":210,"column":21,"nodeType":"118","endLine":218,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":575,"column":33,"nodeType":"121","endLine":575,"endColumn":60},{"ruleId":"108","replacedBy":"122"},{"ruleId":"110","replacedBy":"123"},{"ruleId":"104","severity":1,"message":"124","line":17,"column":8,"nodeType":"106","messageId":"107","endLine":17,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":25,"column":5,"nodeType":"106","messageId":"107","endLine":25,"endColumn":12},{"ruleId":"116","severity":1,"message":"117","line":156,"column":21,"nodeType":"118","endLine":164,"endColumn":22},{"ruleId":"108","replacedBy":"125"},{"ruleId":"110","replacedBy":"126"},{"ruleId":"104","severity":1,"message":"112","line":17,"column":5,"nodeType":"106","messageId":"107","endLine":17,"endColumn":12},{"ruleId":"104","severity":1,"message":"113","line":82,"column":12,"nodeType":"106","messageId":"107","endLine":82,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":145,"column":21,"nodeType":"118","endLine":155,"endColumn":22},{"ruleId":"104","severity":1,"message":"112","line":15,"column":5,"nodeType":"106","messageId":"107","endLine":15,"endColumn":12},{"ruleId":"104","severity":1,"message":"113","line":77,"column":12,"nodeType":"106","messageId":"107","endLine":77,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":135,"column":21,"nodeType":"118","endLine":145,"endColumn":22},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"104","severity":1,"message":"129","line":7,"column":5,"nodeType":"106","messageId":"107","endLine":7,"endColumn":15},{"ruleId":"104","severity":1,"message":"130","line":9,"column":5,"nodeType":"106","messageId":"107","endLine":9,"endColumn":15},{"ruleId":"104","severity":1,"message":"131","line":10,"column":5,"nodeType":"106","messageId":"107","endLine":10,"endColumn":11},"no-unused-vars","'NoSchemaIntrospectionCustomRule' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'Spotify' is assigned a value but never used.","'hasError' is assigned a value but never used.","'albumid' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["132"],["133"],"'taylorswift' is defined but never used.",["132"],["133"],["132"],["133"],"'CardHeader' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation"]
