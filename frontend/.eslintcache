[{"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js":"1","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js":"2","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js":"3","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js":"4","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js":"5","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js":"6","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx":"7","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js":"8","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js":"9","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\firebase\\Auth.js":"10","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js":"11","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx":"12","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx":"13","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx":"14"},{"size":171,"mtime":1607664945796,"results":"15","hashOfConfig":"16"},{"size":7113,"mtime":1607921512984,"results":"17","hashOfConfig":"16"},{"size":24714,"mtime":1607726901949,"results":"18","hashOfConfig":"16"},{"size":3405,"mtime":1607923170915,"results":"19","hashOfConfig":"16"},{"size":7578,"mtime":1607906887738,"results":"20","hashOfConfig":"16"},{"size":3969,"mtime":1607895075519,"results":"21","hashOfConfig":"16"},{"size":629,"mtime":1607895075519,"results":"22","hashOfConfig":"16"},{"size":4349,"mtime":1607895075523,"results":"23","hashOfConfig":"16"},{"size":3213,"mtime":1607895075522,"results":"24","hashOfConfig":"16"},{"size":671,"mtime":1607664945706,"results":"25","hashOfConfig":"16"},{"size":6450,"mtime":1607895075526,"results":"26","hashOfConfig":"16"},{"size":5513,"mtime":1607925388228,"results":"27","hashOfConfig":"16"},{"size":181,"mtime":1607664945810,"results":"28","hashOfConfig":"16"},{"size":3111,"mtime":1607915380593,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ta8lqd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js",["81","82","83","84","85","86"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n    CardMedia,\n    Link,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\nimport SearchComponent from './SearchComponent'\nimport ShowErrorModal from './Modals/ShowErrorModal'\nimport deadmau5_Image from '../img/artist-img/deadmau5.jpg'\nimport Keane_Image from '../img/artist-img/Keane.jpg'\nimport Avici_Image from '../img/artist-img/Avici.jpg'\nimport Elvis_Image from '../img/artist-img/Elvis.jpg'\nimport VariousArtist_Image from '../img/artist-img/various_artist.jpg'\nimport IZAL from '../img/artist-img/IZAL.jpg'\nimport VetustaMorla from '../img/artist-img/VetustaMorla.jpg'\n\nlet Spotify = require('spotify-web-api-js')\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQAg9L_c09vM1ThhLGRZt-FBwcS8-vx3JyNEFB7rQ3CQnLh2WPOUk9qkksbLzsvtlig7QGOFYpCuCHLBpqZZWIXtIAjgb33v3M55De3XoIg5jnDDKfLIMORo9sBFvt5rWMw7AhWaN3GWNgGpB5Tu7DTgl8efHYtYIK1oUGxks5GwYPLq'\n)\n\nconst useStyles = makeStyles({\n    sidebar: {\n        marginTop: '10%',\n        backgroundColor: 'grey',\n        maxWidth: '20%',\n    },\n    mainbar: {\n        marginTop: '1%',\n    },\n    sidebarCard: {\n        maxWidth: '150px !important',\n        height: '150px',\n        textAlign: 'center',\n        borderRadius: 1,\n        border: '1px solid #1e8678',\n        marginBottom: '10px',\n        marginTop: '10px',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n        backgroundColor: 'lightblue',\n    },\n    card: {\n        maxWidth: '100%',\n        height: '100%',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n        padding: '5px',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n    media: {\n        height: '100%',\n        width: '100%',\n    },\n    root: {\n        display: 'flex',\n        maxWidth: '100%',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '50%',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: '50%',\n    },\n    errorDiv: {\n        color: 'red',\n    },\n})\n\nconst PlayTracks = (props) => {\n    const [artistData, setArtistData] = useState(null)\n    const [artistId, setArtistId] = useState('43ZHCT0cAZBISjO8DG9PnE')\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [searchTerm, setSearchTerm] = useState(null)\n    const [searchData, setSearchData] = useState(null)\n    const [errorModal, setErrorModal] = useState(false)\n    const [albumid, setAlbumId] = useState(null)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    //1pzvBxYgT6OVwJLtHkrdQK -- Taylor Swift\n    //2hDe0Ls5mVqs1XJqv7sbcM -- Enrique\n    //4MzXwWMhyBbmu6hOcLVD49 -- bad Bunny\n    //43ZHCT0cAZBISjO8DG9PnE -- Elvis\n    //53A0W3U0s8diEn9RhXQhVz --Keane\n    // 2CIMQHirSU0MQqyYHq0eOx -- \"deadmau5\"\n    //57dN52uHvrHOxijzpIgu3E -- Various Artists\n    //1vCWHaC5f2uS3yhpwWbIA6 -- \"Avicii\"\n    //https://open.spotify.com/album/5Ouuxga807CPAs81lSloBJ?si=u9qkqNpiR2m45FkvcG4rnQ\n    //\"2hazSY4Ef3aB9ATXW7F5w3\" -- IZAL\n    //\"6J6yx1t3nwIDyPXk5xa7O8\" -- \"6J6yx1t3nwIDyPXk5xa7O8\"\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.getArtistAlbums(\n                    artistId,\n                    { country: 'us' },\n                    function (err, data) {\n                        if (err) {\n                            console.error('Something went wrong!')\n                        } else {\n                            setArtistData(data.items)\n                            setSearchData(null)\n                            setLoading(false)\n                        }\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n                setLoading(false)\n            }\n        }\n        fetchData()\n    }, [artistId])\n\n    useEffect(() => {\n        async function searchArtist() {\n            try {\n                console.log(searchTerm)\n                spotifyApi.searchArtists(searchTerm).then(\n                    function (data) {\n                        setSearchData({ data: data.artists.items })\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                        setLoading(false)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n                setLoading(false)\n            }\n        }\n        searchArtist()\n    }, [searchTerm])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        setErrorModal(true)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const getAtristID = (id) => {\n        console.log(id)\n        setArtistId(id)\n    }\n    const searchValue = async (value) => {\n        setSearchTerm(value)\n    }\n    const buildCard = (artist) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={4} key={artist.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{artist.name}</span>\n                                <br />\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={'https://open.spotify.com/embed?uri=' + artist.uri}\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(artist)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                </Card>\n            </Grid>\n        )\n    }\n    if (searchTerm && searchData) {\n        card =\n            searchData.data &&\n            searchData.data.map((searhedList) => {\n                return buildCard(searhedList)\n            })\n    } else {\n        card =\n            artistData &&\n            artistData.map((artist) => {\n                return buildCard(artist)\n            })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    } else if (searchTerm && searchData.data.length <= 0) {\n        return (\n            <div class=\"main\">\n                <div class=\"row\">\n                    <div\n                        class=\"col-md-3 col-sm-6 col-xs-12\"\n                        className={classes.sidebar}\n                    >\n                        <div className={classes.sidebarCard}>\n                            <h4>Artist List</h4>\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '2CIMQHirSU0MQqyYHq0eOx'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={deadmau5_Image}\n                                            title=\"show image\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '53A0W3U0s8diEn9RhXQhVz'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Keane_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '1vCWHaC5f2uS3yhpwWbIA6'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Avici_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '43ZHCT0cAZBISjO8DG9PnE'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Elvis_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '2hazSY4Ef3aB9ATXW7F5w3'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={IZAL}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '6J6yx1t3nwIDyPXk5xa7O8'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={VetustaMorla}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '57dN52uHvrHOxijzpIgu3E'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={VariousArtist_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                        </div>\n                    </div>\n                    <br />\n                    <br />\n                    <div class=\"col-md-9\">\n                        <div>\n                            <SearchComponent\n                                searchValue={searchValue}\n                                searchTerm={searchTerm}\n                            />\n                        </div>\n                        <br />\n                        <div className={classes.errorDiv}>\n                            \"error: No result found for this search.\"\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"main\">\n                <div class=\"row\">\n                    <div\n                        class=\"col-md-3 col-sm-6 col-xs-12\"\n                        className={classes.sidebar}\n                    >\n                        <div className={classes.sidebarCard}>\n                            <h4>Artist List</h4>\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '2CIMQHirSU0MQqyYHq0eOx'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={deadmau5_Image}\n                                            title=\"show image\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '53A0W3U0s8diEn9RhXQhVz'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Keane_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '1vCWHaC5f2uS3yhpwWbIA6'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Avici_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '43ZHCT0cAZBISjO8DG9PnE'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Elvis_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '2hazSY4Ef3aB9ATXW7F5w3'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={IZAL}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '6J6yx1t3nwIDyPXk5xa7O8'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={VetustaMorla}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAtristID(\n                                                '57dN52uHvrHOxijzpIgu3E'\n                                            )\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={VariousArtist_Image}\n                                            title=\"Paella dish\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                        </div>\n                    </div>\n                    <br />\n                    <br />\n                    <div class=\"col-md-9\">\n                        <div>\n                            <SearchComponent\n                                searchValue={searchValue}\n                                searchTerm={searchTerm}\n                            />\n                        </div>\n                        <div>\n                            <Grid\n                                container\n                                className={classes.grid}\n                                className={classes.mainbar}\n                                spacing={5}\n                            >\n                                {card}\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n\n                {currentUser\n                    ? showSharePostModal && (\n                          <AddPostModal\n                              isOpen={showSharePostModal}\n                              handleClose={handleCloseModals}\n                              title={'Share Post'}\n                              data={null}\n                              currentUser={currentUser.uid}\n                              songData={sharePost}\n                              postId={null}\n                          />\n                      )\n                    : errorModal && (\n                          <ShowErrorModal\n                              isOpen={errorModal}\n                              handleClose={handleCloseModals}\n                              title={'Login Error'}\n                          />\n                      )}\n            </div>\n        )\n    }\n}\n\nexport default PlayTracks\n","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js",["87","88","89"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\nimport SearchComponent from './SearchComponent'\nimport ShowErrorModal from './Modals/ShowErrorModal'\n\nlet Spotify = require('spotify-web-api-js')\n// var s = new Spotify();\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQCwwf27DshVe-LLXxXSfzrywJtt8E8O5dt9ScodkGB-ZEPaRq_Y3SsWNNyDY6VwdEFuSwJpKvB12BwLoxkQorXLozJYHVJCpLulT4ijI-a6HCmM6GGtzUM-qBaYoZKYhy2pSimr9JdctCaH3hVTa1kZnixuZXjQytXP3uJEewjlYoHk'\n)\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n    errorDiv: {\n        color: 'red',\n    },\n})\n\nconst SearchPlayList = (props) => {\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [searchTerm, setSearchTerm] = useState('Happy')\n    const [errorModal, setErrorModal] = useState(false)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.searchTracks(searchTerm, { country: 'US' }).then(\n                    function (data) {\n                        setPlayListData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [searchTerm])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        console.log(trackDetails)\n        setErrorModal(true)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const searchValue = async (value) => {\n        setSearchTerm(value)\n    }\n\n    const buildCard = (playList) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={4} key={playList.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{playList.name}</span>\n                                <br />\n                                <span>Popularity: {playList.popularity}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={\n                            'https://open.spotify.com/embed?uri=' + playList.uri\n                        }\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(playList)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                </Card>\n            </Grid>\n        )\n    }\n    if (playListData) {\n        console.log(playListData)\n        card =\n            playListData &&\n            playListData\n                .filter((x) =>\n                    x.available_markets.some((y) => y.includes('US'))\n                )\n                .map((playList) => {\n                    return buildCard(playList)\n                })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    } else if (searchTerm && playListData.length <= 0) {\n        return (\n            <div class=\"main\">\n                <div>\n                    <SearchComponent\n                        searchValue={searchValue}\n                        searchTerm={searchTerm}\n                    />\n                    <br />\n                    <div className={classes.errorDiv}>\n                        {'error: No result found for this search.'}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"main\">\n                <br />\n                <div>\n                    <SearchComponent\n                        searchValue={searchValue}\n                        searchTerm={searchTerm}\n                    />\n                </div>\n                <br />\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n\n                {currentUser\n                    ? showSharePostModal && (\n                          <AddPostModal\n                              isOpen={showSharePostModal}\n                              handleClose={handleCloseModals}\n                              title={'Share Post'}\n                              data={null}\n                              currentUser={currentUser.uid}\n                              songData={sharePost}\n                              postId={null}\n                          />\n                      )\n                    : errorModal && (\n                          <ShowErrorModal\n                              isOpen={errorModal}\n                              handleClose={handleCloseModals}\n                              title={'Login Error'}\n                          />\n                      )}\n            </div>\n        )\n    }\n}\n\nexport default SearchPlayList\n","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js",[],["90","91"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\firebase\\Auth.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js",["92","93","94"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n} from '@material-ui/core'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport { AuthContext } from '../firebase/Auth'\r\nimport AddPostModal from './Modals/AddPostModal'\r\n\r\nlet Spotify = require('spotify-web-api-js')\r\n// var s = new Spotify();\r\n\r\nlet spotifyApi = new SpotifyWebApi()\r\n\r\nspotifyApi.setAccessToken(\r\n    'BQBzVb1VQn20pxWFtP63bRzK3Zjl9APTx7Ncn8qZ6x34ULjGsefsTYmLoqPTLWY1Q_NFpwccm1C_XFb2K4NoJlqDZkruMf9nD4db-EQCNwaIL_3W_uAUmZQdMbi8D0Gjyc1Qh26wDD_0nrTccDq_ba7IXaMjQ124feTF7y_Pee4kkxppIjShXxrzU_BakWoiQs99wsZ6wBfIrd2PQDcMlNAozGc'\r\n)\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 350,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow:\r\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold',\r\n        Color: 'black !important',\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    modal: {\r\n        top: '50%',\r\n        left: '20%',\r\n        right: 'auto',\r\n        // bottom: '90%',\r\n        marginRight: '50%',\r\n        transform: 'translate(10%, -50%)',\r\n        width: '50%',\r\n        // border: '1px solid #28547a',\r\n        borderRadius: '4px',\r\n        float: 'left',\r\n        // background:'lightblue'\r\n    },\r\n\r\n    textFieldStyle: {\r\n        left: '.5%',\r\n        right: '.5%',\r\n        top: '.5%',\r\n        bottom: '25%',\r\n        width: '90%',\r\n        margin: 'auto',\r\n        background: 'white',\r\n    },\r\n\r\n    buttonClass: {\r\n        marginLeft: '40%',\r\n    },\r\n})\r\n\r\nconst PlayListByLoveSongs = (props) => {\r\n    const [playListData, setPlayListData] = useState(undefined)\r\n    const classes = useStyles()\r\n    const [hasError, setHasError] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const [sharePost, setSharePost] = useState(null)\r\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\r\n\r\n    const { currentUser } = useContext(AuthContext)\r\n\r\n    let card = null\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                spotifyApi.searchTracks('Love', { country: 'us' }).then(\r\n                    function (data) {\r\n                        setPlayListData(data.tracks.items)\r\n                        setLoading(false)\r\n                    },\r\n                    function (err) {\r\n                        setHasError(err)\r\n                    }\r\n                )\r\n            } catch (e) {\r\n                setHasError(e.message)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleOpenshareModal = (trackDetails) => {\r\n        setShowSharePostModal(true)\r\n        setSharePost(trackDetails)\r\n        console.log(trackDetails)\r\n    }\r\n\r\n    const handleCloseModals = () => {\r\n        setShowSharePostModal(false)\r\n    }\r\n\r\n    const buildCard = (playList) => {\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\r\n                <Card className={classes.card} variant=\"outlined\">\r\n                    <CardActionArea>\r\n                        <a href={playList.external_urls.spotify}>\r\n                            Go to Spotify\r\n                        </a>\r\n                        <CardContent>\r\n                            <Typography\r\n                                className={classes.titleHead}\r\n                                gutterBottom\r\n                                variant=\"h6\"\r\n                                component=\"h3\"\r\n                            >\r\n                                <span>{playList.name}</span>\r\n                                <br />\r\n                                <span>Popularity: {playList.popularity}</span>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <iframe\r\n                        id=\"playSong\"\r\n                        src={\r\n                            'https://open.spotify.com/embed?uri=' + playList.uri\r\n                        }\r\n                        width=\"300\"\r\n                        height=\"380\"\r\n                        frameborder=\"0\"\r\n                        allowtransparency=\"true\"\r\n                        allow=\"encrypted-media\"\r\n                    ></iframe>\r\n                    <div className=\"e-card-actions e-card-vertical\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.buttonClass}\r\n                            onClick={() => {\r\n                                handleOpenshareModal(playList)\r\n                            }}\r\n                        >\r\n                            share\r\n                        </Button>\r\n                    </div>\r\n                    {showSharePostModal && (\r\n                        <AddPostModal\r\n                            isOpen={showSharePostModal}\r\n                            handleClose={handleCloseModals}\r\n                            title={'Share Post'}\r\n                            data={null}\r\n                            currentUser={currentUser.uid}\r\n                            songData={sharePost}\r\n                            postId={null}\r\n                        />\r\n                    )}\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n    if (playListData) {\r\n        console.log(playListData)\r\n        card =\r\n            playListData &&\r\n            playListData\r\n                .filter((x) =>\r\n                    x.available_markets.some((y) => y.includes('US'))\r\n                )\r\n                .map((playList) => {\r\n                    return buildCard(playList)\r\n                })\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div class=\"main\">\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    {card}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayListByLoveSongs\r\n",["95","96"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx",["97","98","99","100","101","102","103","104","105","106","107","108","109"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":10,"column":5,"nodeType":"116","messageId":"117","endLine":10,"endColumn":9},{"ruleId":"114","severity":1,"message":"118","line":11,"column":5,"nodeType":"116","messageId":"117","endLine":11,"endColumn":14},{"ruleId":"114","severity":1,"message":"119","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":25},{"ruleId":"114","severity":1,"message":"120","line":17,"column":8,"nodeType":"116","messageId":"117","endLine":17,"endColumn":19},{"ruleId":"114","severity":1,"message":"121","line":18,"column":8,"nodeType":"116","messageId":"117","endLine":18,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":19,"column":8,"nodeType":"116","messageId":"117","endLine":19,"endColumn":19},{"ruleId":"114","severity":1,"message":"123","line":20,"column":8,"nodeType":"116","messageId":"117","endLine":20,"endColumn":16},{"ruleId":"114","severity":1,"message":"124","line":21,"column":8,"nodeType":"116","messageId":"117","endLine":21,"endColumn":16},{"ruleId":"114","severity":1,"message":"125","line":22,"column":8,"nodeType":"116","messageId":"117","endLine":22,"endColumn":16},{"ruleId":"114","severity":1,"message":"126","line":83,"column":22,"nodeType":"116","messageId":"117","endLine":83,"endColumn":33},{"ruleId":"114","severity":1,"message":"127","line":96,"column":16,"nodeType":"116","messageId":"117","endLine":96,"endColumn":21},{"ruleId":"114","severity":1,"message":"128","line":96,"column":23,"nodeType":"116","messageId":"117","endLine":96,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":112,"column":12,"nodeType":"131","endLine":112,"endColumn":35,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"133","line":126,"column":11,"nodeType":"116","messageId":"117","endLine":126,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":148,"column":21,"nodeType":"136","endLine":156,"endColumn":22},{"ruleId":"114","severity":1,"message":"137","line":26,"column":5,"nodeType":"116","messageId":"117","endLine":26,"endColumn":12},{"ruleId":"114","severity":1,"message":"138","line":105,"column":12,"nodeType":"116","messageId":"117","endLine":105,"endColumn":20},{"ruleId":"114","severity":1,"message":"139","line":112,"column":12,"nodeType":"116","messageId":"117","endLine":112,"endColumn":19},{"ruleId":"114","severity":1,"message":"140","line":112,"column":21,"nodeType":"116","messageId":"117","endLine":112,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":210,"column":21,"nodeType":"136","endLine":218,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":575,"column":33,"nodeType":"143","endLine":575,"endColumn":60},{"ruleId":"114","severity":1,"message":"137","line":17,"column":5,"nodeType":"116","messageId":"117","endLine":17,"endColumn":12},{"ruleId":"114","severity":1,"message":"138","line":82,"column":12,"nodeType":"116","messageId":"117","endLine":82,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":145,"column":21,"nodeType":"136","endLine":155,"endColumn":22},{"ruleId":"110","replacedBy":"144"},{"ruleId":"112","replacedBy":"145"},{"ruleId":"114","severity":1,"message":"137","line":15,"column":5,"nodeType":"116","messageId":"117","endLine":15,"endColumn":12},{"ruleId":"114","severity":1,"message":"138","line":77,"column":12,"nodeType":"116","messageId":"117","endLine":77,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":135,"column":21,"nodeType":"136","endLine":145,"endColumn":22},{"ruleId":"110","replacedBy":"146"},{"ruleId":"112","replacedBy":"147"},{"ruleId":"114","severity":1,"message":"148","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":13},{"ruleId":"114","severity":1,"message":"149","line":17,"column":12,"nodeType":"116","messageId":"117","endLine":17,"endColumn":19},{"ruleId":"114","severity":1,"message":"150","line":17,"column":21,"nodeType":"116","messageId":"117","endLine":17,"endColumn":31},{"ruleId":"114","severity":1,"message":"138","line":18,"column":12,"nodeType":"116","messageId":"117","endLine":18,"endColumn":20},{"ruleId":"114","severity":1,"message":"151","line":19,"column":12,"nodeType":"116","messageId":"117","endLine":19,"endColumn":16},{"ruleId":"114","severity":1,"message":"152","line":19,"column":18,"nodeType":"116","messageId":"117","endLine":19,"endColumn":25},{"ruleId":"114","severity":1,"message":"153","line":20,"column":12,"nodeType":"116","messageId":"117","endLine":20,"endColumn":22},{"ruleId":"114","severity":1,"message":"128","line":39,"column":23,"nodeType":"116","messageId":"117","endLine":39,"endColumn":31},{"ruleId":"129","severity":1,"message":"154","line":40,"column":15,"nodeType":"155","endLine":73,"endColumn":12},{"ruleId":"114","severity":1,"message":"156","line":47,"column":17,"nodeType":"116","messageId":"117","endLine":47,"endColumn":31},{"ruleId":"129","severity":1,"message":"157","line":73,"column":13,"nodeType":"131","endLine":73,"endColumn":21,"suggestions":"158"},{"ruleId":"114","severity":1,"message":"159","line":79,"column":6,"nodeType":"116","messageId":"117","endLine":79,"endColumn":14},{"ruleId":"114","severity":1,"message":"153","line":117,"column":1,"nodeType":"116","messageId":"117","endLine":117,"endColumn":11},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'Legends_Never_Die' is defined but never used.","'taylorswift' is defined but never used.","'The_Goat' is defined but never used.","'After_Hours' is defined but never used.","'folklore' is defined but never used.","'No_Image' is defined but never used.","'Euphoria' is defined but never used.","'setHasError' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'albumId'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'getAlbumID' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Spotify' is assigned a value but never used.","'hasError' is assigned a value but never used.","'albumid' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["160"],["161"],["160"],["161"],"'set' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'searchType' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'optQueryParams' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'baseUrl'. Either include it or remove the dependency array. Outer scope values like 'search' aren't valid dependencies because mutating them doesn't re-render the component.",["163"],"'songData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [albumId, props.match.params.id]",{"range":"168","text":"169"},"Update the dependencies array to be: [baseUrl]",{"range":"170","text":"171"},[3320,3343],"[albumId, props.match.params.id]",[2940,2948],"[baseUrl]"]