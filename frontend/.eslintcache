[{"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js":"1","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playAlbum.js":"2","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Sidebar.jsx":"3","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playListbyLoveSongs.js":"4","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/PostInsert.jsx":"5","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignUp.js":"6","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Artist.js":"7","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js":"8","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js":"9","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/NavBar.jsx":"10","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SidebarRight.jsx":"11","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/Home.jsx":"12","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/UserProfile.jsx":"13","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/firebase/Auth.js":"14"},{"size":3309,"mtime":1607879862546,"results":"15","hashOfConfig":"16"},{"size":12954,"mtime":1607889017669,"results":"17","hashOfConfig":"16"},{"size":3012,"mtime":1607889269857,"results":"18","hashOfConfig":"16"},{"size":6247,"mtime":1607889059663,"results":"19","hashOfConfig":"16"},{"size":17114,"mtime":1607892141252,"results":"20","hashOfConfig":"16"},{"size":4235,"mtime":1607879862550,"results":"21","hashOfConfig":"16"},{"size":24714,"mtime":1607791892141,"results":"22","hashOfConfig":"16"},{"size":171,"mtime":1607791892164,"results":"23","hashOfConfig":"16"},{"size":3863,"mtime":1607879862547,"results":"24","hashOfConfig":"16"},{"size":599,"mtime":1607879862548,"results":"25","hashOfConfig":"16"},{"size":3386,"mtime":1607791892144,"results":"26","hashOfConfig":"16"},{"size":181,"mtime":1607791892164,"results":"27","hashOfConfig":"16"},{"size":15017,"mtime":1607879862552,"results":"28","hashOfConfig":"16"},{"size":671,"mtime":1607791892147,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"hswteu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js",[],["61","62"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playAlbum.js",["63","64","65"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n    Link,\n    CardMedia,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\nimport Legends_Never_Die from '../img/artist-img/Legends_Never_Die.jpg'\nimport taylorswift from '../img/artist-img/taylorswift.jpg'\nimport The_Goat from '../img/artist-img/The_Goat.webp'\nimport After_Hours from '../img/artist-img/After_Hours.jpg'\nimport folklore from '../img/artist-img/folklore.jpg'\nimport No_Image from '../img/artist-img/No_Image.jpeg'\nimport Euphoria from '../img/artist-img/Euphoria.jpg'\nimport ShowErrorModal from './Modals/ShowErrorModal'\n\nlet Spotify = require('spotify-web-api-js')\n// var s = new Spotify();\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQBzVb1VQn20pxWFtP63bRzK3Zjl9APTx7Ncn8qZ6x34ULjGsefsTYmLoqPTLWY1Q_NFpwccm1C_XFb2K4NoJlqDZkruMf9nD4db-EQCNwaIL_3W_uAUmZQdMbi8D0Gjyc1Qh26wDD_0nrTccDq_ba7IXaMjQ124feTF7y_Pee4kkxppIjShXxrzU_BakWoiQs99wsZ6wBfIrd2PQDcMlNAozGc'\n)\n\nconst useStyles = makeStyles({\n    sidebarCard: {\n        maxWidth: '100%',\n        height: '100%',\n        marginTop: '12px',\n    },\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n})\n\nconst PlayAlbum = (props) => {\n    const [albumData, setAlbumtData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [albumId, setAlbumId] = useState('12HeDZhPHHzCe7VE0uEYwD')\n    const [errorModal, setErrorModal] = useState(false)\n\n    let card = null\n\n    const { currentUser } = useContext(AuthContext)\n    useEffect(() => {\n        console.log('on load useeffect')\n        async function fetchData() {\n            try {\n                spotifyApi.getAlbum(albumId).then(\n                    function (data) {\n                        setAlbumtData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [albumId])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        setErrorModal(true)\n        console.log(trackDetails)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const getAlbumID = (id) => {\n        setAlbumId(id)\n    }\n\n    const buildCard = (album) => {\n        return (\n            <Grid item xs={12} sm={6} md={6} lg={6} xl={6} key={album.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{album.name}</span>\n                                <br />\n                                <span>Track Number: {album.track_number}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={'https://open.spotify.com/embed?uri=' + album.uri}\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(album)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                </Card>\n            </Grid>\n        )\n    }\n    if (albumData) {\n        console.log(albumData)\n        card =\n            albumData &&\n            albumData.map((album) => {\n                return buildCard(album)\n            })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    }\n    if (hasError) {\n        return <div>{hasError}</div>\n    } else {\n        return (\n            <div class=\"main\">\n                <div class=\"row\">\n                    <div\n                        class=\"col-md-3 col-sm-6 col-xs-12\"\n                        className={classes.sidebar}\n                    >\n                        <div className={classes.sidebarCard}>\n                            <h4>Popular Albums</h4>\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('12HeDZhPHHzCe7VE0uEYwD')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Euphoria}\n                                            title=\" \"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined \">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('6n9DKpOxwifT5hOXtgLZSL')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={Legends_Never_Die}\n                                            title=\"Ledends Never Die\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('39xhYyNNDatQtgKw2KdXMz')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={The_Goat}\n                                            title=\"The Goat\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('3YjfdLdpQcVI72uKhooZst')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={No_Image}\n                                            title=\"F*Ck LOVE(SAVAGE)\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('2fenSS68JI1h4Fo296JfGr')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={folklore}\n                                            title=\"folklore\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <Card variant=\"outlined\">\n                                <CardActionArea>\n                                    <Link\n                                        onClick={() =>\n                                            getAlbumID('4yP0hdKOZPNshxUOjY0cZj')\n                                        }\n                                    >\n                                        <CardMedia\n                                            className={classes.media}\n                                            component=\"img\"\n                                            image={After_Hours}\n                                            title=\"After Hours\"\n                                        />\n                                    </Link>\n                                </CardActionArea>\n                            </Card>\n                            <br />\n                            <br />\n                        </div>\n                    </div>\n                    <br />\n                    <br />\n                    <div class=\"col-md-9\">\n                        <Grid container className={classes.grid} spacing={5}>\n                            {card}\n                        </Grid>\n                    </div>\n                </div>\n                {currentUser\n                    ? showSharePostModal && (\n                          <AddPostModal\n                              isOpen={showSharePostModal}\n                              handleClose={handleCloseModals}\n                              title={'Share Post'}\n                              data={null}\n                              currentUser={currentUser.uid}\n                              songData={sharePost}\n                              postId={null}\n                          />\n                      )\n                    : errorModal && (\n                          <ShowErrorModal\n                              isOpen={errorModal}\n                              handleClose={handleCloseModals}\n                              title={'Login Error'}\n                          />\n                      )}\n            </div>\n        )\n    }\n}\n\nexport default PlayAlbum\n","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Sidebar.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playListbyLoveSongs.js",["66","67","68"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\n\nlet Spotify = require('spotify-web-api-js')\n// var s = new Spotify();\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQBzVb1VQn20pxWFtP63bRzK3Zjl9APTx7Ncn8qZ6x34ULjGsefsTYmLoqPTLWY1Q_NFpwccm1C_XFb2K4NoJlqDZkruMf9nD4db-EQCNwaIL_3W_uAUmZQdMbi8D0Gjyc1Qh26wDD_0nrTccDq_ba7IXaMjQ124feTF7y_Pee4kkxppIjShXxrzU_BakWoiQs99wsZ6wBfIrd2PQDcMlNAozGc'\n)\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n})\n\nconst PlayListByLoveSongs = (props) => {\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.searchTracks('Love', { country: 'us' }).then(\n                    function (data) {\n                        setPlayListData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        console.log(trackDetails)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n    }\n\n    const buildCard = (playList) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <a href={playList.external_urls.spotify}>\n                            Go to Spotify\n                        </a>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{playList.name}</span>\n                                <br />\n                                <span>Popularity: {playList.popularity}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={\n                            'https://open.spotify.com/embed?uri=' + playList.uri\n                        }\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(playList)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                    {showSharePostModal && (\n                        <AddPostModal\n                            isOpen={showSharePostModal}\n                            handleClose={handleCloseModals}\n                            title={'Share Post'}\n                            data={null}\n                            currentUser={currentUser.uid}\n                            songData={sharePost}\n                            postId={null}\n                        />\n                    )}\n                </Card>\n            </Grid>\n        )\n    }\n    if (playListData) {\n        console.log(playListData)\n        card =\n            playListData &&\n            playListData\n                .filter((x) =>\n                    x.available_markets.some((y) => y.includes('US'))\n                )\n                .map((playList) => {\n                    return buildCard(playList)\n                })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayListByLoveSongs\n","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/PostInsert.jsx",["69","70","71","72","73","74","75","76","77"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignUp.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Artist.js",["78","79","80","81","82","83"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/NavBar.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SidebarRight.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/Home.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/pages/UserProfile.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/firebase/Auth.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":17,"column":8,"nodeType":"90","messageId":"91","endLine":17,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":25,"column":5,"nodeType":"90","messageId":"91","endLine":25,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":155,"column":21,"nodeType":"95","endLine":163,"endColumn":22},{"ruleId":"88","severity":1,"message":"92","line":15,"column":5,"nodeType":"90","messageId":"91","endLine":15,"endColumn":12},{"ruleId":"88","severity":1,"message":"96","line":77,"column":12,"nodeType":"90","messageId":"91","endLine":77,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":135,"column":21,"nodeType":"95","endLine":145,"endColumn":22},{"ruleId":"88","severity":1,"message":"97","line":20,"column":12,"nodeType":"90","messageId":"91","endLine":20,"endColumn":19},{"ruleId":"88","severity":1,"message":"98","line":24,"column":12,"nodeType":"90","messageId":"91","endLine":24,"endColumn":24},{"ruleId":"88","severity":1,"message":"99","line":24,"column":26,"nodeType":"90","messageId":"91","endLine":24,"endColumn":41},{"ruleId":"88","severity":1,"message":"100","line":66,"column":25,"nodeType":"90","messageId":"91","endLine":66,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":79,"column":17,"nodeType":"103","messageId":"104","endLine":79,"endColumn":33},{"ruleId":"88","severity":1,"message":"105","line":101,"column":25,"nodeType":"90","messageId":"91","endLine":101,"endColumn":29},{"ruleId":"88","severity":1,"message":"106","line":128,"column":29,"nodeType":"90","messageId":"91","endLine":128,"endColumn":37},{"ruleId":"88","severity":1,"message":"106","line":135,"column":29,"nodeType":"90","messageId":"91","endLine":135,"endColumn":37},{"ruleId":"88","severity":1,"message":"105","line":191,"column":25,"nodeType":"90","messageId":"91","endLine":191,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":26,"column":5,"nodeType":"90","messageId":"91","endLine":26,"endColumn":12},{"ruleId":"88","severity":1,"message":"96","line":105,"column":12,"nodeType":"90","messageId":"91","endLine":105,"endColumn":20},{"ruleId":"88","severity":1,"message":"107","line":112,"column":12,"nodeType":"90","messageId":"91","endLine":112,"endColumn":19},{"ruleId":"88","severity":1,"message":"108","line":112,"column":21,"nodeType":"90","messageId":"91","endLine":112,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":210,"column":21,"nodeType":"95","endLine":218,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":575,"column":33,"nodeType":"111","endLine":575,"endColumn":60},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'taylorswift' is defined but never used.","Identifier","unusedVar","'Spotify' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'hasError' is assigned a value but never used.","'loading' is assigned a value but never used.","'commentArray' is assigned a value but never used.","'setCommentArray' is assigned a value but never used.","'commentData' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'data' is assigned a value but never used.","'likeData' is assigned a value but never used.","'albumid' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]