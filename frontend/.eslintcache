[{"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js":"1","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js":"2","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx":"3","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx":"4","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js":"5","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js":"6","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js":"7","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js":"8","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx":"9","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx":"10","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js":"11","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Modals\\ShowErrorModal.js":"12","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js":"13","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchComponent.js":"14","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js":"15"},{"size":3456,"mtime":1607711967674,"results":"16","hashOfConfig":"17"},{"size":25321,"mtime":1607712159457,"results":"18","hashOfConfig":"17"},{"size":3081,"mtime":1607718081172,"results":"19","hashOfConfig":"17"},{"size":3386,"mtime":1607664945577,"results":"20","hashOfConfig":"17"},{"size":6928,"mtime":1607718191852,"results":"21","hashOfConfig":"17"},{"size":171,"mtime":1607664945796,"results":"22","hashOfConfig":"17"},{"size":3487,"mtime":1607664944979,"results":"23","hashOfConfig":"17"},{"size":7823,"mtime":1607718181649,"results":"24","hashOfConfig":"17"},{"size":607,"mtime":1607664945177,"results":"25","hashOfConfig":"17"},{"size":181,"mtime":1607664945810,"results":"26","hashOfConfig":"17"},{"size":6204,"mtime":1607664945337,"results":"27","hashOfConfig":"17"},{"size":2523,"mtime":1607664945141,"results":"28","hashOfConfig":"17"},{"size":3591,"mtime":1607664945662,"results":"29","hashOfConfig":"17"},{"size":840,"mtime":1607712270552,"results":"30","hashOfConfig":"17"},{"size":2724,"mtime":1607664945612,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1ta8lqd",{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\app\\index.js",["68"],"import React, { lazy, Suspense } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { AuthProvider } from '../firebase/Auth'\r\n// import { PlayAlbum } from \"../components\";\r\nimport NavBar from '../components/NavBar'\r\nimport Sidebar from '../components/Sidebar'\r\nimport SidebarRight from '../components/SidebarRight'\r\nimport { NoSchemaIntrospectionCustomRule } from 'graphql'\r\n\r\nconst SignIn = lazy(() => import('../components/SignIn'))\r\nconst SignUp = lazy(() => import('../components/SignUp'))\r\nconst PlayAlbum = lazy(() => import('../components/playAlbum'))\r\nconst PlayArtist = lazy(() => import('../components/Artist'))\r\nconst PlayListByLoveSongs = lazy(() =>\r\n    import('../components/playListbyLoveSongs')\r\n)\r\nconst SearchPlayList = lazy(() => import('../components/SearchPlayList'))\r\nconst PostInsert = lazy(() => import('../pages/PostInsert'))\r\nconst Home = lazy(() => import('../pages/Home'))\r\nconst UserProfile = lazy(() => import('../pages/UserProfile'))\r\nconst ChangePassword = lazy(() => import('../components/ChangePassword'))\r\n\r\nfunction App() {\r\n    return (\r\n        <AuthProvider>\r\n            <Router>\r\n                <NavBar />\r\n                <Sidebar />\r\n                <SidebarRight />\r\n                <Suspense fallback={<p>Loading...</p>}>\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/post/create\"\r\n                            exact\r\n                            component={PostInsert}\r\n                        />\r\n                        <Route path=\"/post\" exact component={Home} />\r\n                        <Route path=\"/signin\" component={SignIn} />\r\n                        <Route path=\"/signup\" component={SignUp} />\r\n                        <Route path=\"/playList\" exact component={PlayAlbum} />\r\n                        <Route\r\n                            path=\"/searchTracks\"\r\n                            exact\r\n                            component={SearchPlayList}\r\n                        />\r\n                        <Route\r\n                            path=\"/artistPlayList\"\r\n                            exact\r\n                            component={PlayArtist}\r\n                        />\r\n                        <Route\r\n                            path=\"/playListbyLove\"\r\n                            exact\r\n                            component={PlayListByLoveSongs}\r\n                        />\r\n\r\n                        <Route\r\n                            path=\"/usershowprofile\"\r\n                            exact\r\n                            component={() => <UserProfile page=\"ShowProfile\" />}\r\n                        />\r\n                        <Route\r\n                            path=\"/usereditprofile\"\r\n                            exact\r\n                            component={() => <UserProfile page=\"EditProfile\" />}\r\n                        />\r\n                        <Route\r\n                            path=\"/userupdatepassword\"\r\n                            exact\r\n                            component={ChangePassword}\r\n                        />\r\n                        <Route path=\"/\">\r\n                            <Redirect to=\"/post\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </Suspense>\r\n            </Router>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n",["69","70"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Artist.js",["71","72","73","74","75","76"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Sidebar.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SidebarRight.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playAlbum.js",["77","78"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\index.js",[],["79","80"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\ChangePassword.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchPlayList.js",["81","82","83"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n} from '@material-ui/core'\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nimport { AuthContext } from '../firebase/Auth'\r\nimport AddPostModal from './Modals/AddPostModal'\r\nimport SearchComponent from './SearchComponent'\r\nimport ShowErrorModal from './Modals/ShowErrorModal'\r\n\r\nlet Spotify = require('spotify-web-api-js')\r\n// var s = new Spotify();\r\n\r\nlet spotifyApi = new SpotifyWebApi()\r\n\r\nspotifyApi.setAccessToken(\r\n    'BQAm0xnzbiDvCo52MJQSOo5ahTWuw2FcoX91qEbTlvA-fIBbX6ojo9yk3_NkG_vZyTN2WbjktjlhWGb2sYz8efc0Zp_kP7uDPg7A5sGcU3UZ8POwdAUjb12qXLhCLyO069O0G-sREHaIkV4NNcCyvNZ8c7PTcv9yZM90w4Gjw_JAFUU1'\r\n)\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 350,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow:\r\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold',\r\n        Color: 'black !important',\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    modal: {\r\n        top: '50%',\r\n        left: '20%',\r\n        right: 'auto',\r\n        // bottom: '90%',\r\n        marginRight: '50%',\r\n        transform: 'translate(10%, -50%)',\r\n        width: '50%',\r\n        // border: '1px solid #28547a',\r\n        borderRadius: '4px',\r\n        float: 'left',\r\n        // background:'lightblue'\r\n    },\r\n\r\n    textFieldStyle: {\r\n        left: '.5%',\r\n        right: '.5%',\r\n        top: '.5%',\r\n        bottom: '25%',\r\n        width: '90%',\r\n        margin: 'auto',\r\n        background: 'white',\r\n    },\r\n\r\n    buttonClass: {\r\n        marginLeft: '40%',\r\n    },\r\n    errorDiv: {\r\n        color: 'red',\r\n    },\r\n})\r\n\r\nconst SearchPlayList = (props) => {\r\n    const [playListData, setPlayListData] = useState(undefined)\r\n    const classes = useStyles()\r\n    const [hasError, setHasError] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const [sharePost, setSharePost] = useState(null)\r\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\r\n    const [searchTerm, setSearchTerm] = useState('Happy')\r\n    const [errorModal, setErrorModal] = useState(false)\r\n\r\n    const { currentUser } = useContext(AuthContext)\r\n\r\n    let card = null\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                spotifyApi.searchTracks(searchTerm, { country: 'US' }).then(\r\n                    function (data) {\r\n                        setPlayListData(data.tracks.items)\r\n                        setLoading(false)\r\n                    },\r\n                    function (err) {\r\n                        setHasError(err)\r\n                    }\r\n                )\r\n            } catch (e) {\r\n                setHasError(e.message)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [searchTerm])\r\n\r\n    const handleOpenshareModal = (trackDetails) => {\r\n        setShowSharePostModal(true)\r\n        setSharePost(trackDetails)\r\n        console.log(trackDetails)\r\n        setErrorModal(true)\r\n    }\r\n\r\n    const handleCloseModals = () => {\r\n        setShowSharePostModal(false)\r\n        setErrorModal(false)\r\n    }\r\n\r\n    const searchValue = async (value) => {\r\n        setSearchTerm(value)\r\n    }\r\n\r\n    const buildCard = (playList) => {\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\r\n                <Card className={classes.card} variant=\"outlined\">\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography\r\n                                className={classes.titleHead}\r\n                                gutterBottom\r\n                                variant=\"h6\"\r\n                                component=\"h3\"\r\n                            >\r\n                                <span>{playList.name}</span>\r\n                                <br />\r\n                                <span>Popularity: {playList.popularity}</span>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <iframe\r\n                        id=\"playSong\"\r\n                        src={\r\n                            'https://open.spotify.com/embed?uri=' + playList.uri\r\n                        }\r\n                        width=\"300\"\r\n                        height=\"380\"\r\n                        frameborder=\"0\"\r\n                        allowtransparency=\"true\"\r\n                        allow=\"encrypted-media\"\r\n                    ></iframe>\r\n                    <div className=\"e-card-actions e-card-vertical\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.buttonClass}\r\n                            onClick={() => {\r\n                                handleOpenshareModal(playList)\r\n                            }}\r\n                        >\r\n                            share\r\n                        </Button>\r\n                    </div>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n    if (playListData) {\r\n        console.log(playListData)\r\n        card =\r\n            playListData &&\r\n            playListData\r\n                .filter((x) =>\r\n                    x.available_markets.some((y) => y.includes('US'))\r\n                )\r\n                .map((playList) => {\r\n                    return buildCard(playList)\r\n                })\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        )\r\n    } else if (searchTerm && playListData.length <= 0) {\r\n        return (\r\n            <div class=\"main\">\r\n                <div>\r\n                    <SearchComponent\r\n                        searchValue={searchValue}\r\n                        searchTerm={searchTerm}\r\n                    />\r\n                    <br />\r\n                    <div className={classes.errorDiv}>\r\n                        {'error: No result found for this search.'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div class=\"main\">\r\n                <br />\r\n                <div>\r\n                    <SearchComponent\r\n                        searchValue={searchValue}\r\n                        searchTerm={searchTerm}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    {card}\r\n                </Grid>\r\n\r\n                {currentUser\r\n                    ? showSharePostModal && (\r\n                          <AddPostModal\r\n                              isOpen={showSharePostModal}\r\n                              handleClose={handleCloseModals}\r\n                              title={'Share Post'}\r\n                              data={null}\r\n                              currentUser={currentUser.uid}\r\n                              songData={sharePost}\r\n                              postId={null}\r\n                          />\r\n                      )\r\n                    : errorModal && (\r\n                          <ShowErrorModal\r\n                              isOpen={errorModal}\r\n                              handleClose={handleCloseModals}\r\n                              title={'Login Error'}\r\n                          />\r\n                      )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPlayList\r\n","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\NavBar.jsx",[],["84","85"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\playListbyLoveSongs.js",["86","87","88"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AuthContext } from '../firebase/Auth'\nimport AddPostModal from './Modals/AddPostModal'\n\nlet Spotify = require('spotify-web-api-js')\n// var s = new Spotify();\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQBclgNt0TcT10snXjsw5KbLGIxzuCjtTyLeU9mX-knZrueTkSrKnq1JJ-G_ncLoJUyhBIKfqn_YB2mwy5mWSHbxaTj3-BqgPPG-tRGDauzL-OkAkfJMyhsBaNi3Rj6FLPx2P5ESnf_S_eW6rOO7ZqVU4Ct8NQ35dnMJVHfOw9Rrm-P5'\n)\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n})\n\nconst PlayListByLoveSongs = (props) => {\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.searchTracks('Love', { country: 'us' }).then(\n                    function (data) {\n                        setPlayListData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        console.log(trackDetails)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n    }\n\n    const buildCard = (playList) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <a href={playList.external_urls.spotify}>\n                            Go to Spotify\n                        </a>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{playList.name}</span>\n                                <br />\n                                <span>Popularity: {playList.popularity}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={\n                            'https://open.spotify.com/embed?uri=' + playList.uri\n                        }\n                        width=\"300\"\n                        height=\"380\"\n                        frameborder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(playList)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                    {showSharePostModal && (\n                        <AddPostModal\n                            isOpen={showSharePostModal}\n                            handleClose={handleCloseModals}\n                            title={'Share Post'}\n                            data={null}\n                            currentUser={currentUser.uid}\n                            songData={sharePost}\n                            postId={null}\n                        />\n                    )}\n                </Card>\n            </Grid>\n        )\n    }\n    if (playListData) {\n        console.log(playListData)\n        card =\n            playListData &&\n            playListData\n                .filter((x) =>\n                    x.available_markets.some((y) => y.includes('US'))\n                )\n                .map((playList) => {\n                    return buildCard(playList)\n                })\n    }\n\n    if (loading) {\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayListByLoveSongs\n","C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\Modals\\ShowErrorModal.js",["89","90","91"],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SearchComponent.js",[],"C:\\Users\\visit\\CS554\\CS-554-Project\\cs554-music-platform\\frontend\\src\\components\\SignIn.js",[],{"ruleId":"92","severity":1,"message":"93","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":41},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":26,"column":5,"nodeType":"94","messageId":"95","endLine":26,"endColumn":12},{"ruleId":"92","severity":1,"message":"101","line":105,"column":12,"nodeType":"94","messageId":"95","endLine":105,"endColumn":20},{"ruleId":"92","severity":1,"message":"102","line":112,"column":12,"nodeType":"94","messageId":"95","endLine":112,"endColumn":19},{"ruleId":"92","severity":1,"message":"103","line":112,"column":21,"nodeType":"94","messageId":"95","endLine":112,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":210,"column":21,"nodeType":"106","endLine":218,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":575,"column":33,"nodeType":"109","endLine":575,"endColumn":60},{"ruleId":"92","severity":1,"message":"100","line":15,"column":5,"nodeType":"94","messageId":"95","endLine":15,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":135,"column":21,"nodeType":"106","endLine":143,"endColumn":22},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"92","severity":1,"message":"100","line":17,"column":5,"nodeType":"94","messageId":"95","endLine":17,"endColumn":12},{"ruleId":"92","severity":1,"message":"101","line":82,"column":12,"nodeType":"94","messageId":"95","endLine":82,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":145,"column":21,"nodeType":"106","endLine":155,"endColumn":22},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"92","severity":1,"message":"100","line":15,"column":5,"nodeType":"94","messageId":"95","endLine":15,"endColumn":12},{"ruleId":"92","severity":1,"message":"101","line":77,"column":12,"nodeType":"94","messageId":"95","endLine":77,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":135,"column":21,"nodeType":"106","endLine":145,"endColumn":22},{"ruleId":"92","severity":1,"message":"114","line":7,"column":5,"nodeType":"94","messageId":"95","endLine":7,"endColumn":15},{"ruleId":"92","severity":1,"message":"115","line":9,"column":5,"nodeType":"94","messageId":"95","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":10,"column":5,"nodeType":"94","messageId":"95","endLine":10,"endColumn":11},"no-unused-vars","'NoSchemaIntrospectionCustomRule' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'Spotify' is assigned a value but never used.","'hasError' is assigned a value but never used.","'albumid' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["117"],["118"],["117"],["118"],"'CardHeader' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation"]