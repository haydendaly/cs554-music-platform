[{"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js":"1","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playListbyLoveSongs.js":"2","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Sidebar.jsx":"3","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignUp.js":"4","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js":"5","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SocialSignIn.js":"6","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayArtist.js":"7","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js":"8","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/firebase/Auth.js":"9","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayTracks.js":"10","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SidebarRight.jsx":"11","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayPlayList.js":"12"},{"size":3953,"mtime":1608071380161,"results":"13","hashOfConfig":"14"},{"size":6067,"mtime":1608071380164,"results":"15","hashOfConfig":"14"},{"size":5297,"mtime":1607982813639,"results":"16","hashOfConfig":"14"},{"size":4968,"mtime":1607982813640,"results":"17","hashOfConfig":"14"},{"size":3834,"mtime":1607982813639,"results":"18","hashOfConfig":"14"},{"size":1366,"mtime":1607879862551,"results":"19","hashOfConfig":"14"},{"size":6696,"mtime":1608076886528,"results":"20","hashOfConfig":"14"},{"size":171,"mtime":1607791892164,"results":"21","hashOfConfig":"14"},{"size":704,"mtime":1608071380164,"results":"22","hashOfConfig":"14"},{"size":6660,"mtime":1608077021298,"results":"23","hashOfConfig":"14"},{"size":8420,"mtime":1608074583691,"results":"24","hashOfConfig":"14"},{"size":6702,"mtime":1608076902698,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"hswteu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/app/index.js",[],["54","55"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/playListbyLoveSongs.js",["56","57"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\nimport SpotifyWebApi from 'spotify-web-api-js'\n\nimport { AuthContext } from '../firebase/Auth'\nimport Loading from './Loading'\nimport AddPostModal from './Modals/AddPostModal'\n\nlet spotifyApi = new SpotifyWebApi()\n\nspotifyApi.setAccessToken(\n    'BQBzVb1VQn20pxWFtP63bRzK3Zjl9APTx7Ncn8qZ6x34ULjGsefsTYmLoqPTLWY1Q_NFpwccm1C_XFb2K4NoJlqDZkruMf9nD4db-EQCNwaIL_3W_uAUmZQdMbi8D0Gjyc1Qh26wDD_0nrTccDq_ba7IXaMjQ124feTF7y_Pee4kkxppIjShXxrzU_BakWoiQs99wsZ6wBfIrd2PQDcMlNAozGc'\n)\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        marginLeft: '40%',\n    },\n})\n\nconst PlayListByLoveSongs = (props) => {\n    const [playListData, setPlayListData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n\n    const { currentUser } = useContext(AuthContext)\n\n    let card = null\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                spotifyApi.searchTracks('Love', { country: 'us' }).then(\n                    function (data) {\n                        setPlayListData(data.tracks.items)\n                        setLoading(false)\n                    },\n                    function (err) {\n                        setHasError(err)\n                    }\n                )\n            } catch (e) {\n                setHasError(e.message)\n            }\n        }\n        fetchData()\n    }, [])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n    }\n\n    const buildCard = (playList) => {\n        return (\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2} key={playList.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <a href={playList.external_urls.spotify}>\n                            Go to Spotify\n                        </a>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{playList.name}</span>\n                                <br />\n                                <span>Popularity: {playList.popularity}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={\n                            'https://open.spotify.com/embed?uri=' + playList.uri\n                        }\n                        width=\"300\"\n                        height=\"380\"\n                        frameBorder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(playList)\n                            }}\n                        >\n                            share\n                        </Button>\n                    </div>\n                    {showSharePostModal && (\n                        <AddPostModal\n                            isOpen={showSharePostModal}\n                            handleClose={handleCloseModals}\n                            title={'Share Post'}\n                            data={null}\n                            currentUser={currentUser.uid}\n                            songData={sharePost}\n                            postId={null}\n                        />\n                    )}\n                </Card>\n            </Grid>\n        )\n    }\n    if (playListData) {\n        card =\n            playListData &&\n            playListData\n                .filter((x) =>\n                    x.available_markets.some((y) => y.includes('US'))\n                )\n                .map((playList) => {\n                    return buildCard(playList)\n                })\n    }\n\n    if (loading) {\n        return <Loading />\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayListByLoveSongs\n",["58","59"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/Sidebar.jsx",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SignUp.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/ChangePassword.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SocialSignIn.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayArtist.js",["60","61","62","63","64","65","66","67"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/index.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/firebase/Auth.js",[],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayTracks.js",["68","69","70","71","72","73"],"import React, { useContext, useState, useEffect } from 'react'\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core'\n\nimport { AuthContext } from '../firebase/Auth'\nimport Loading from './Loading'\nimport AddPostModal from './Modals/AddPostModal'\nimport ShowErrorModal from './Modals/ShowErrorModal'\nimport axios from 'axios'\nimport { SpotifyContext } from '../functions/Spotify'\n\nconst useStyles = makeStyles({\n    sidebarCard: {\n        maxWidth: '100%',\n        height: '100%',\n        marginTop: '12px',\n    },\n    card: {\n        marginTop: \"10%\",\n        maxWidth: 350,\n        height: 'auto',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        borderRadius: 5,\n        border: '1px solid #1e8678',\n        boxShadow:\n            '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);',\n    },\n    titleHead: {\n        borderBottom: '1px solid #1e8678',\n        fontWeight: 'bold',\n        Color: 'black !important',\n    },\n    grid: {\n        flexGrow: 1,\n        flexDirection: 'row',\n    },\n    modal: {\n        top: '50%',\n        left: '20%',\n        right: 'auto',\n        // bottom: '90%',\n        marginRight: '50%',\n        transform: 'translate(10%, -50%)',\n        width: '50%',\n        // border: '1px solid #28547a',\n        borderRadius: '4px',\n        float: 'left',\n        // background:'lightblue'\n    },\n\n    textFieldStyle: {\n        left: '.5%',\n        right: '.5%',\n        top: '.5%',\n        bottom: '25%',\n        width: '90%',\n        margin: 'auto',\n        background: 'white',\n    },\n\n    buttonClass: {\n        justifyContent: 'center',\n        marginBottom : '5%',\n        marginTop: '5%'\n    },\n})\n\nconst PlayByTracks = (props) => {\n    const { accessToken } = useContext(SpotifyContext)\n    const [trackData, setTrackData] = useState(undefined)\n    const classes = useStyles()\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [sharePost, setSharePost] = useState(null)\n    const [showSharePostModal, setShowSharePostModal] = useState(null)\n    const [albumId, setAlbumId] = useState(props.match.params.id)\n    const [errorModal, setErrorModal] = useState(false)\n\n    let card = null\n    const baseUrl = 'http://localhost:3000/spotify-api/tracks/'\n\n    const { currentUser } = useContext(AuthContext)\n\n    const [state, setState] = useState({ data: null })\n\n    useEffect(() => {\n        console.log('on load useeffect')\n        async function fetchData() {\n            try {\n                console.log(albumId)\n                const { data } = await axios.get(\n                    baseUrl +\n                        props.match.params.id +\n                        '?access_token=' +\n                        accessToken\n                )\n                setTrackData(data)\n                console.log(data)\n                setLoading(false)\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        fetchData()\n    }, [props.match.params.id])\n\n    const handleOpenshareModal = (trackDetails) => {\n        setShowSharePostModal(true)\n        setSharePost(trackDetails)\n        setErrorModal(true)\n    }\n\n    const handleCloseModals = () => {\n        setShowSharePostModal(false)\n        setErrorModal(false)\n    }\n\n    const buildCard = (album) => {\n        return (\n            <center>\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={4} key={album.id}>\n                <Card className={classes.card} variant=\"outlined\">\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography\n                                className={classes.titleHead}\n                                gutterBottom\n                                variant=\"h6\"\n                                component=\"h3\"\n                            >\n                                <span>{album.name}</span>\n                                <br />\n                                <span>Track Number: {album.track_number}</span>\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <iframe\n                        id=\"playSong\"\n                        src={'https://open.spotify.com/embed?uri=' + album.uri}\n                        width=\"300\"\n                        height=\"380\"\n                        frameBorder=\"0\"\n                        allowtransparency=\"true\"\n                        allow=\"encrypted-media\"\n                    ></iframe>\n                    <div className=\"e-card-actions e-card-vertical\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonClass}\n                            onClick={() => {\n                                handleOpenshareModal(album)\n                            }}\n                        >\n                            share\n                        </Button>\n                        {currentUser\n                            ? showSharePostModal && (\n                                  <AddPostModal\n                                      isOpen={showSharePostModal}\n                                      handleClose={handleCloseModals}\n                                      title={'Share Post'}\n                                      data={null}\n                                      currentUser={currentUser.uid}\n                                      songData={sharePost}\n                                      postId={null}\n                                  />\n                              )\n                            : errorModal && (\n                                  <ShowErrorModal\n                                      isOpen={errorModal}\n                                      handleClose={handleCloseModals}\n                                      title={'Login Error'}\n                                  />\n                              )}\n                    </div>\n                </Card>\n            </Grid>\n            </center>\n        )\n    }\n    if (trackData) {\n        console.log(trackData)\n        card = trackData && trackData\n        return buildCard(trackData)\n    }\n\n    if (loading) {\n        return <Loading />\n    }\n    if (hasError) {\n        return <div>{hasError}</div>\n    } else {\n        return (\n            <div class=\"main\">\n                <Grid container className={classes.grid} spacing={5}>\n                    {card}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default PlayByTracks\n","/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/SidebarRight.jsx",["74","75","76","77"],"/Users/mahvishsyed/Desktop/Github/cs554-music-platform/frontend/src/components/PlayPlayList.js",["78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":76,"column":12,"nodeType":"88","messageId":"89","endLine":76,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":133,"column":21,"nodeType":"92","endLine":143,"endColumn":22},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"86","severity":1,"message":"95","line":10,"column":5,"nodeType":"88","messageId":"89","endLine":10,"endColumn":9},{"ruleId":"86","severity":1,"message":"96","line":11,"column":5,"nodeType":"88","messageId":"89","endLine":11,"endColumn":14},{"ruleId":"86","severity":1,"message":"97","line":82,"column":22,"nodeType":"88","messageId":"89","endLine":82,"endColumn":33},{"ruleId":"86","severity":1,"message":"98","line":86,"column":21,"nodeType":"88","messageId":"89","endLine":86,"endColumn":31},{"ruleId":"86","severity":1,"message":"99","line":94,"column":12,"nodeType":"88","messageId":"89","endLine":94,"endColumn":17},{"ruleId":"86","severity":1,"message":"100","line":94,"column":19,"nodeType":"88","messageId":"89","endLine":94,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":115,"column":8,"nodeType":"103","endLine":115,"endColumn":31,"suggestions":"104"},{"ruleId":"90","severity":1,"message":"91","line":147,"column":21,"nodeType":"92","endLine":155,"endColumn":22},{"ruleId":"86","severity":1,"message":"97","line":80,"column":22,"nodeType":"88","messageId":"89","endLine":80,"endColumn":33},{"ruleId":"86","severity":1,"message":"98","line":84,"column":21,"nodeType":"88","messageId":"89","endLine":84,"endColumn":31},{"ruleId":"86","severity":1,"message":"99","line":92,"column":12,"nodeType":"88","messageId":"89","endLine":92,"endColumn":17},{"ruleId":"86","severity":1,"message":"100","line":92,"column":19,"nodeType":"88","messageId":"89","endLine":92,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":113,"column":8,"nodeType":"103","endLine":113,"endColumn":31,"suggestions":"105"},{"ruleId":"90","severity":1,"message":"91","line":145,"column":21,"nodeType":"92","endLine":153,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":19,"column":12,"nodeType":"88","messageId":"89","endLine":19,"endColumn":20},{"ruleId":"101","severity":1,"message":"106","line":39,"column":8,"nodeType":"103","endLine":39,"endColumn":10,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"108","line":85,"column":8,"nodeType":"103","endLine":85,"endColumn":16,"suggestions":"109"},{"ruleId":"86","severity":1,"message":"87","line":182,"column":9,"nodeType":"88","messageId":"89","endLine":182,"endColumn":17},{"ruleId":"86","severity":1,"message":"97","line":80,"column":22,"nodeType":"88","messageId":"89","endLine":80,"endColumn":33},{"ruleId":"86","severity":1,"message":"98","line":84,"column":21,"nodeType":"88","messageId":"89","endLine":84,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":111,"column":8,"nodeType":"103","endLine":111,"endColumn":31,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"91","line":143,"column":21,"nodeType":"92","endLine":151,"endColumn":22},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'hasError' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["111"],["112"],"'Link' is defined but never used.","'CardMedia' is defined but never used.","'setHasError' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'albumId'. Either include them or remove the dependency array.","ArrayExpression",["113"],["114"],"React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has missing dependencies: 'accessToken' and 'baseUrl'. Either include them or remove the dependency array.",["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"118","fix":"125"},"Update the dependencies array to be: [accessToken, albumId, props.match.params.id]",{"range":"126","text":"127"},{"range":"128","text":"127"},"Update the dependencies array to be: [accessToken]",{"range":"129","text":"130"},"Update the dependencies array to be: [accessToken, baseUrl, search]",{"range":"131","text":"132"},{"range":"133","text":"127"},[3083,3106],"[accessToken, albumId, props.match.params.id]",[3052,3075],[1495,1497],"[accessToken]",[3312,3320],"[accessToken, baseUrl, search]",[3010,3033]]